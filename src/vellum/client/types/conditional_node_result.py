# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .conditional_node_result_data import ConditionalNodeResultData


class ConditionalNodeResult(UniversalBaseModel):
    """
    A Node Result Event emitted from a Conditional Node.
    """

    type: typing.Literal["CONDITIONAL"] = "CONDITIONAL"
    data: ConditionalNodeResultData

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
