# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .ephemeral_prompt_cache_config import EphemeralPromptCacheConfig
from .prompt_block_state import PromptBlockState
from .rich_text_child_block import RichTextChildBlock


class RichTextPromptBlock(UniversalBaseModel):
    """
    A block that includes a combination of plain text and variable blocks.
    """

    block_type: typing.Literal["RICH_TEXT"] = "RICH_TEXT"
    state: typing.Optional[PromptBlockState] = None
    cache_config: typing.Optional[EphemeralPromptCacheConfig] = None
    blocks: typing.List[RichTextChildBlock]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
