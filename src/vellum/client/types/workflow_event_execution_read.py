# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .execution_vellum_value import ExecutionVellumValue
from .vellum_span import VellumSpan
from .workflow_deployment_parent_context import WorkflowDeploymentParentContext
from .workflow_error import WorkflowError
from .workflow_execution_actual import WorkflowExecutionActual
from .workflow_execution_usage_result import WorkflowExecutionUsageResult
from .workflow_execution_view_online_eval_metric_result import WorkflowExecutionViewOnlineEvalMetricResult


class WorkflowEventExecutionRead(UniversalBaseModel):
    span_id: str
    parent_context: typing.Optional[WorkflowDeploymentParentContext] = None
    start: dt.datetime
    end: typing.Optional[dt.datetime] = None
    inputs: typing.List[ExecutionVellumValue]
    outputs: typing.List[ExecutionVellumValue]
    error: typing.Optional[WorkflowError] = None
    latest_actual: typing.Optional[WorkflowExecutionActual] = None
    metric_results: typing.List[WorkflowExecutionViewOnlineEvalMetricResult]
    usage_results: typing.Optional[typing.List[WorkflowExecutionUsageResult]] = None
    spans: typing.List[VellumSpan]
    state: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
