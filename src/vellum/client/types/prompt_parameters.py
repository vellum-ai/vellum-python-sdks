# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class PromptParameters(UniversalBaseModel):
    stop: typing.Optional[typing.List[str]] = None
    temperature: typing.Optional[float] = None
    max_tokens: typing.Optional[int] = None
    top_p: typing.Optional[float] = None
    top_k: typing.Optional[int] = None
    frequency_penalty: typing.Optional[float] = None
    presence_penalty: typing.Optional[float] = None
    logit_bias: typing.Optional[typing.Dict[str, typing.Optional[float]]] = None
    custom_parameters: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
