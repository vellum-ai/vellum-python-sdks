# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class WorkflowResolvedState(UniversalBaseModel):
    """
    The latest execution state of a given Workflow Execution
    """

    trace_id: str
    timestamp: dt.datetime
    span_id: str
    state: typing.Dict[str, typing.Optional[typing.Any]]
    previous_span_id: typing.Optional[str] = None
    previous_trace_id: typing.Optional[str] = None
    root_span_id: typing.Optional[str] = None
    root_trace_id: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
