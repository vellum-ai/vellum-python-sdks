# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from ..core.pydantic_utilities import UniversalBaseModel
import typing
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic
from ..core.pydantic_utilities import update_forward_refs


class ApiRequestParentContext(UniversalBaseModel):
    parent: typing.Optional["ParentContext"] = None
    links: typing.Optional[typing.List["SpanLink"]] = None
    type: typing.Literal["API_REQUEST"] = "API_REQUEST"
    span_id: str

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from .node_parent_context import NodeParentContext  # noqa: E402
from .prompt_deployment_parent_context import PromptDeploymentParentContext  # noqa: E402
from .span_link import SpanLink  # noqa: E402
from .workflow_deployment_parent_context import WorkflowDeploymentParentContext  # noqa: E402
from .workflow_parent_context import WorkflowParentContext  # noqa: E402
from .workflow_sandbox_parent_context import WorkflowSandboxParentContext  # noqa: E402
from .parent_context import ParentContext  # noqa: E402

update_forward_refs(NodeParentContext, ApiRequestParentContext=ApiRequestParentContext)
update_forward_refs(PromptDeploymentParentContext, ApiRequestParentContext=ApiRequestParentContext)
update_forward_refs(SpanLink, ApiRequestParentContext=ApiRequestParentContext)
update_forward_refs(WorkflowDeploymentParentContext, ApiRequestParentContext=ApiRequestParentContext)
update_forward_refs(WorkflowParentContext, ApiRequestParentContext=ApiRequestParentContext)
update_forward_refs(WorkflowSandboxParentContext, ApiRequestParentContext=ApiRequestParentContext)
update_forward_refs(ApiRequestParentContext)
