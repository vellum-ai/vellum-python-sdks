# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from ..core.pydantic_utilities import UniversalBaseModel
from .array_vellum_value import ArrayVellumValue
import pydantic
import typing
from .vellum_value import VellumValue
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.pydantic_utilities import update_forward_refs


class ArrayInput(UniversalBaseModel):
    """
    A user input representing a Vellum Array value
    """

    name: str = pydantic.Field()
    """
    The variable's name
    """

    type: typing.Literal["ARRAY"] = "ARRAY"
    value: typing.List[VellumValue]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


update_forward_refs(ArrayVellumValue, ArrayInput=ArrayInput)
