# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
from .vellum_code_resource_definition import VellumCodeResourceDefinition
import typing
from .invoked_port import InvokedPort
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class NodeExecutionFulfilledBody(UniversalBaseModel):
    node_definition: VellumCodeResourceDefinition
    invoked_ports: typing.Optional[typing.List[InvokedPort]] = None
    outputs: typing.Dict[str, typing.Optional[typing.Any]]
    mocked: typing.Optional[bool] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
