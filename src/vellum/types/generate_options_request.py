# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .logprobs_enum import LogprobsEnum
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class GenerateOptionsRequest(UniversalBaseModel):
    logprobs: typing.Optional[LogprobsEnum] = pydantic.Field(default=None)
    """
    Which logprobs to include, if any. Defaults to NONE.
    
    - `ALL` - ALL
    - `NONE` - NONE
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
