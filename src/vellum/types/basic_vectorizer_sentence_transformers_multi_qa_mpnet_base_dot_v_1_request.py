# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class BasicVectorizerSentenceTransformersMultiQaMpnetBaseDotV1Request(UniversalBaseModel):
    """
    Basic vectorizer for sentence-transformers/multi-qa-mpnet-base-dot-v1.
    """

    model_name: typing.Literal["sentence-transformers/multi-qa-mpnet-base-dot-v1"] = (
        "sentence-transformers/multi-qa-mpnet-base-dot-v1"
    )
    config: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
