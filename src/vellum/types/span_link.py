# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from ..core.pydantic_utilities import UniversalBaseModel
from .span_link_type_enum import SpanLinkTypeEnum
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import typing
import pydantic
from ..core.pydantic_utilities import update_forward_refs


class SpanLink(UniversalBaseModel):
    trace_id: str
    type: SpanLinkTypeEnum = "TRIGGERED_BY"
    span_context: "ParentContext"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from .api_request_parent_context import ApiRequestParentContext  # noqa: E402
from .node_parent_context import NodeParentContext  # noqa: E402
from .prompt_deployment_parent_context import PromptDeploymentParentContext  # noqa: E402
from .workflow_deployment_parent_context import WorkflowDeploymentParentContext  # noqa: E402
from .workflow_parent_context import WorkflowParentContext  # noqa: E402
from .workflow_sandbox_parent_context import WorkflowSandboxParentContext  # noqa: E402
from .parent_context import ParentContext  # noqa: E402

update_forward_refs(ApiRequestParentContext, SpanLink=SpanLink)
update_forward_refs(NodeParentContext, SpanLink=SpanLink)
update_forward_refs(PromptDeploymentParentContext, SpanLink=SpanLink)
update_forward_refs(WorkflowDeploymentParentContext, SpanLink=SpanLink)
update_forward_refs(WorkflowParentContext, SpanLink=SpanLink)
update_forward_refs(WorkflowSandboxParentContext, SpanLink=SpanLink)
update_forward_refs(SpanLink)
