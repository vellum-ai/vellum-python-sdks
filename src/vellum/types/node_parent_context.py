# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .vellum_code_resource_definition import VellumCodeResourceDefinition
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic
from ..core.pydantic_utilities import update_forward_refs


class NodeParentContext(UniversalBaseModel):
    parent: typing.Optional["ParentContext"] = None
    links: typing.Optional[typing.List["SpanLink"]] = None
    node_definition: VellumCodeResourceDefinition
    type: typing.Literal["WORKFLOW_NODE"] = "WORKFLOW_NODE"
    span_id: str

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from .api_request_parent_context import ApiRequestParentContext  # noqa: E402
from .prompt_deployment_parent_context import PromptDeploymentParentContext  # noqa: E402
from .span_link import SpanLink  # noqa: E402
from .workflow_deployment_parent_context import WorkflowDeploymentParentContext  # noqa: E402
from .workflow_parent_context import WorkflowParentContext  # noqa: E402
from .workflow_sandbox_parent_context import WorkflowSandboxParentContext  # noqa: E402
from .parent_context import ParentContext  # noqa: E402

update_forward_refs(ApiRequestParentContext, NodeParentContext=NodeParentContext)
update_forward_refs(PromptDeploymentParentContext, NodeParentContext=NodeParentContext)
update_forward_refs(SpanLink, NodeParentContext=NodeParentContext)
update_forward_refs(WorkflowDeploymentParentContext, NodeParentContext=NodeParentContext)
update_forward_refs(WorkflowParentContext, NodeParentContext=NodeParentContext)
update_forward_refs(WorkflowSandboxParentContext, NodeParentContext=NodeParentContext)
update_forward_refs(NodeParentContext)
