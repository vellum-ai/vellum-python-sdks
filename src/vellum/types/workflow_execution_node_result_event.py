# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from ..core.pydantic_utilities import UniversalBaseModel
from .array_vellum_value import ArrayVellumValue
import typing
from .workflow_node_result_event import WorkflowNodeResultEvent
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic
from ..core.pydantic_utilities import update_forward_refs


class WorkflowExecutionNodeResultEvent(UniversalBaseModel):
    """
    A NODE-level event emitted from the workflow's execution.
    """

    execution_id: str
    run_id: typing.Optional[str] = None
    external_id: typing.Optional[str] = None
    type: typing.Literal["NODE"] = "NODE"
    data: WorkflowNodeResultEvent

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


update_forward_refs(ArrayVellumValue, WorkflowExecutionNodeResultEvent=WorkflowExecutionNodeResultEvent)
