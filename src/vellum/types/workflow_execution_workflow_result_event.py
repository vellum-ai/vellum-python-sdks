# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel, update_forward_refs
from .workflow_result_event import WorkflowResultEvent


class WorkflowExecutionWorkflowResultEvent(UniversalBaseModel):
    """
    A WORKFLOW-level event emitted from the workflow's execution.
    """

    execution_id: str
    run_id: typing.Optional[str] = None
    external_id: typing.Optional[str] = None
    type: typing.Literal["WORKFLOW"] = "WORKFLOW"
    data: WorkflowResultEvent

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from .array_vellum_value import ArrayVellumValue  # noqa: E402, F401, I001

update_forward_refs(WorkflowExecutionWorkflowResultEvent)
