# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .ml_model_usage_wrapper import MlModelUsageWrapper
from .price import Price
from .workflow_execution_usage_calculation_error import WorkflowExecutionUsageCalculationError


class WorkflowExecutionUsageResult(UniversalBaseModel):
    usage: typing.Optional[typing.List[MlModelUsageWrapper]] = None
    cost: typing.Optional[typing.List[Price]] = None
    error: typing.Optional[WorkflowExecutionUsageCalculationError] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
