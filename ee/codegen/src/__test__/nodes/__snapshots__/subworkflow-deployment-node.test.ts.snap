// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`SubworkflowDeploymentNode > basic > getNodeDisplayFile 1`] = `
"from uuid import UUID

from vellum_ee.workflows.display.editor import NodeDisplayData, NodeDisplayPosition
from vellum_ee.workflows.display.nodes import BaseSubworkflowDeploymentNodeDisplay
from vellum_ee.workflows.display.nodes.types import (
    NodeOutputDisplay,
    PortDisplayOverrides,
)

from ...nodes.subworkflow_node import SubworkflowNode


class SubworkflowNodeDisplay(BaseSubworkflowDeploymentNodeDisplay[SubworkflowNode]):
    label = "Subworkflow Node"
    node_id = UUID("c8f2964c-09b8-44e0-a06d-606319fe5e2a")
    target_handle_id = UUID("f5e6bd33-527a-4ba6-8906-cd5e96a4321c")
    output_display = {
        SubworkflowNode.Outputs.output_1: NodeOutputDisplay(
            id=UUID("1"), name="output-1"
        ),
        SubworkflowNode.Outputs.output_2: NodeOutputDisplay(
            id=UUID("2"), name="output-2"
        ),
    }
    port_displays = {
        SubworkflowNode.Ports.default: PortDisplayOverrides(
            id=UUID("600efd51-8677-4ba3-a582-b298bebb2868")
        )
    }
    display_data = NodeDisplayData(
        position=NodeDisplayPosition(x=2239.986322714681, y=484.74458968144046)
    )
"
`;

exports[`SubworkflowDeploymentNode > basic > getNodeFile 1`] = `
"from typing import Union

from vellum.workflows.nodes.displayable import SubworkflowDeploymentNode


class SubworkflowNode(SubworkflowDeploymentNode):
    deployment = "test-deployment"
    release_tag = "LATEST"
    subworkflow_inputs = {}

    class Outputs(SubworkflowDeploymentNode.Outputs):
        output_1: str
        output_2: Union[float, int]
"
`;

exports[`SubworkflowDeploymentNode > failure > should generate subworkflow deployment node display as much as possible for non strict workflow contexts 1`] = `
"from uuid import UUID

from vellum_ee.workflows.display.editor import NodeDisplayData, NodeDisplayPosition
from vellum_ee.workflows.display.nodes import BaseSubworkflowDeploymentNodeDisplay
from vellum_ee.workflows.display.nodes.types import PortDisplayOverrides

from ...nodes.subworkflow_node import SubworkflowNode


class SubworkflowNodeDisplay(BaseSubworkflowDeploymentNodeDisplay[SubworkflowNode]):
    label = "Subworkflow Node"
    node_id = UUID("c8f2964c-09b8-44e0-a06d-606319fe5e2a")
    target_handle_id = UUID("f5e6bd33-527a-4ba6-8906-cd5e96a4321c")
    output_display = {}
    port_displays = {
        SubworkflowNode.Ports.default: PortDisplayOverrides(
            id=UUID("600efd51-8677-4ba3-a582-b298bebb2868")
        )
    }
    display_data = NodeDisplayData(
        position=NodeDisplayPosition(x=2239.986322714681, y=484.74458968144046)
    )
"
`;

exports[`SubworkflowDeploymentNode > failure > should generate subworkflow deployment nodes as much as possible for non strict workflow contexts 1`] = `
"from vellum.workflows.nodes.displayable import SubworkflowDeploymentNode


class SubworkflowNode(SubworkflowDeploymentNode):
    release_tag = "LATEST"
    subworkflow_inputs = {}
"
`;
