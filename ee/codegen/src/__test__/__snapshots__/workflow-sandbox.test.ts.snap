// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Workflow Sandbox > write > should generate DatasetRow without inputs parameter when dataset row has label but no inputs 1`] = `
"from vellum.workflows.inputs import DatasetRow
from vellum.workflows.sandbox import WorkflowSandboxRunner

from .workflow import TestWorkflow

dataset = [
    DatasetRow(label="Test Label Only"),
]

runner = WorkflowSandboxRunner(workflow=TestWorkflow(), dataset=dataset)

if __name__ == "__main__":
    runner.run()
"
`;

exports[`Workflow Sandbox > write > should generate correct code for camel case input names 1`] = `
"from vellum.workflows.inputs import DatasetRow
from vellum.workflows.sandbox import WorkflowSandboxRunner

from .inputs import Inputs
from .workflow import TestWorkflow

dataset = [
    DatasetRow(label="Example 1", inputs=Inputs(someFoo="some-value")),
    DatasetRow(label="Example 2", inputs=Inputs(someBar="some-value")),
]

runner = WorkflowSandboxRunner(workflow=TestWorkflow(), dataset=dataset)

if __name__ == "__main__":
    runner.run()
"
`;

exports[`Workflow Sandbox > write > should generate correct code for snake case input names 1`] = `
"from vellum.workflows.inputs import DatasetRow
from vellum.workflows.sandbox import WorkflowSandboxRunner

from .inputs import Inputs
from .workflow import TestWorkflow

dataset = [
    DatasetRow(label="Example 1", inputs=Inputs(some_foo="some-value")),
    DatasetRow(label="Example 2", inputs=Inputs(some_bar="some-value")),
]

runner = WorkflowSandboxRunner(workflow=TestWorkflow(), dataset=dataset)

if __name__ == "__main__":
    runner.run()
"
`;

exports[`Workflow Sandbox > write > should generate correct code given inputs 1`] = `
"from vellum.workflows.inputs import DatasetRow
from vellum.workflows.sandbox import WorkflowSandboxRunner

from .inputs import Inputs
from .workflow import TestWorkflow

dataset = [
    DatasetRow(label="Example 1", inputs=Inputs(some_foo="some-value")),
    DatasetRow(label="Example 2", inputs=Inputs(some_bar="some-value")),
]

runner = WorkflowSandboxRunner(workflow=TestWorkflow(), dataset=dataset)

if __name__ == "__main__":
    runner.run()
"
`;

exports[`Workflow Sandbox > write > should generate correct code given optional input with default of null string value 1`] = `
"from vellum.workflows.inputs import DatasetRow
from vellum.workflows.sandbox import WorkflowSandboxRunner

from .inputs import Inputs
from .workflow import TestWorkflow

dataset = [
    DatasetRow(label="Example 1", inputs=Inputs()),
]

runner = WorkflowSandboxRunner(workflow=TestWorkflow(), dataset=dataset)

if __name__ == "__main__":
    runner.run()
"
`;

exports[`Workflow Sandbox > write > should properly handle special characters with escaped quotes 1`] = `
"from vellum.workflows.inputs import DatasetRow
from vellum.workflows.sandbox import WorkflowSandboxRunner

from .inputs import Inputs
from .workflow import TestWorkflow

dataset = [
    DatasetRow(
        label="Example 1",
        inputs=Inputs(special_characters_input='"special characters"'),
    ),
]

runner = WorkflowSandboxRunner(workflow=TestWorkflow(), dataset=dataset)

if __name__ == "__main__":
    runner.run()
"
`;
