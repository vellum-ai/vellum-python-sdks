{
  "nodes": [
    {
      "id": "55e74c90-9901-42fd-92c3-2dd0c5fd4876",
      "display_data": {
        "position": {
          "x": 0.0,
          "y": 0.0
        },
        "comment": {
          "value": "\n    Used to execute an API call. This node exists to be backwards compatible with Vellum's API Node, and for most cases,\n    you should extend from `BaseAPINode` directly.\n\n    url: str - The URL to send the request to.\n    method: APIRequestMethod - The HTTP method to use for the request.\n    data: Optional[str] - The data to send in the request body.\n    json: Optional[\"JsonObject\"] - The JSON data to send in the request body.\n    headers: Optional[Dict[str, Union[str, VellumSecret]]] - The headers to send in the request.\n\n    authorization_type: Optional[AuthorizationType] = None - The type of authorization to use for the API call.\n    api_key_header_key: Optional[str] = None - The header key to use for the API key authorization.\n    bearer_token_value: Optional[Union[str, VellumSecretReference]] = None - The bearer token value to use\n    for the bearer token authorization.\n    ",
          "expanded": true
        }
      },
      "base": {
        "name": "BaseAPINode",
        "module": [
          "vellum",
          "workflows",
          "nodes",
          "displayable",
          "bases",
          "api_node",
          "node"
        ]
      },
      "definition": {
        "name": "APINode",
        "module": [
          "vellum",
          "workflows",
          "nodes",
          "displayable",
          "api_node",
          "node"
        ]
      },
      "trigger": {
        "id": "c2aa7c83-7eba-4996-acb4-85cd4f5bbf58",
        "merge_behavior": "AWAIT_ANY"
      },
      "ports": [
        {
          "id": "f165a94f-33f7-4c09-8896-9e683a39e11c",
          "name": "default",
          "type": "DEFAULT"
        }
      ],
      "attributes": [
        {
          "id": "aacb36f1-c980-460d-8002-43bb57128e05",
          "name": "timeout",
          "value": {
            "type": "CONSTANT_VALUE",
            "value": {
              "type": "JSON",
              "value": null
            }
          }
        }
      ]
    },
    {
      "id": "43b3514f-3490-47d6-9b78-bbc4736f0159",
      "display_data": {
        "position": {
          "x": 0.0,
          "y": 0.0
        },
        "comment": {
          "value": "\n    Used to execute an arbitrary script. This node exists to be backwards compatible with\n    Vellum's Code Execution Node, and for most cases, you should extend from `BaseNode` directly.\n\n    filepath: str - The path to the script to execute.\n    code_inputs: EntityInputsInterface - The inputs for the custom script.\n    runtime: CodeExecutionRuntime = \"PYTHON_3_12\" - The runtime to use for the custom script.\n    packages: Optional[Sequence[CodeExecutionPackage]] = None - The packages to use for the custom script.\n    request_options: Optional[RequestOptions] = None - The request options to use for the custom script.\n    ",
          "expanded": true
        }
      },
      "base": {
        "name": "BaseNode",
        "module": [
          "vellum",
          "workflows",
          "nodes",
          "bases",
          "base"
        ]
      },
      "definition": {
        "name": "CodeExecutionNode",
        "module": [
          "vellum",
          "workflows",
          "nodes",
          "displayable",
          "code_execution_node",
          "node"
        ]
      },
      "trigger": {
        "id": "fb1b8b44-5e7a-481b-a163-96e7e08219d5",
        "merge_behavior": "AWAIT_ANY"
      },
      "ports": [
        {
          "id": "e66138d5-e50d-40d8-bc27-00545ce5e283",
          "name": "default",
          "type": "DEFAULT"
        }
      ]
    },
    {
      "id": "5d3c60ce-7acf-4d8b-a68d-65cc0b561ac5",
      "display_data": {
        "position": {
          "x": 0.0,
          "y": 0.0
        },
        "comment": {
          "value": "\n    Used to conditionally determine which port to invoke next. This node exists to be backwards compatible with\n    Vellum's Conditional Node, and for most cases, you should extend `BaseNode.Ports` directly.\n    ",
          "expanded": true
        }
      },
      "base": {
        "name": "BaseNode",
        "module": [
          "vellum",
          "workflows",
          "nodes",
          "bases",
          "base"
        ]
      },
      "definition": {
        "name": "ConditionalNode",
        "module": [
          "vellum",
          "workflows",
          "nodes",
          "displayable",
          "conditional_node",
          "node"
        ]
      },
      "trigger": {
        "id": "2b5617b4-5cc0-4f9a-9369-24982e2cd8c0",
        "merge_behavior": "AWAIT_ANY"
      },
      "ports": []
    },
    {
      "id": "92e401f1-110f-4edc-8bb0-cad879e1ea08",
      "display_data": {
        "position": {
          "x": 0.0,
          "y": 0.0
        },
        "comment": {
          "value": "\n    Used to raise an error to reject the surrounding Workflow.\n\n    error: Union[str, VellumError] - The error to raise.\n    ",
          "expanded": true
        }
      },
      "base": {
        "name": "BaseNode",
        "module": [
          "vellum",
          "workflows",
          "nodes",
          "bases",
          "base"
        ]
      },
      "definition": {
        "name": "ErrorNode",
        "module": [
          "vellum",
          "workflows",
          "nodes",
          "core",
          "error_node",
          "node"
        ]
      },
      "trigger": {
        "id": "c1b30829-76af-4d99-bf83-b030c551a7cf",
        "merge_behavior": "AWAIT_ATTRIBUTES"
      },
      "ports": []
    },
    {
      "id": "55d0f8e9-acbd-4d33-85ba-c7527348f62a",
      "display_data": {
        "position": {
          "x": 0.0,
          "y": 0.0
        },
        "comment": {
          "value": "\n    Used to execute a Prompt defined inline.\n\n    prompt_inputs: EntityInputsInterface - The inputs for the Prompt\n    ml_model: str - Either the ML Model's UUID or its name.\n    blocks: List[PromptBlock] - The blocks that make up the Prompt\n    functions: Optional[List[FunctionDefinition]] - The functions to include in the Prompt\n    parameters: PromptParameters - The parameters for the Prompt\n    expand_meta: Optional[AdHocExpandMeta] - Expandable execution fields to include in the response\n    request_options: Optional[RequestOptions] - The request options to use for the Prompt Execution\n    ",
          "expanded": true
        }
      },
      "base": {
        "name": "BaseInlinePromptNode",
        "module": [
          "vellum",
          "workflows",
          "nodes",
          "displayable",
          "bases",
          "inline_prompt_node",
          "node"
        ]
      },
      "definition": {
        "name": "InlinePromptNode",
        "module": [
          "vellum",
          "workflows",
          "nodes",
          "displayable",
          "inline_prompt_node",
          "node"
        ]
      },
      "trigger": {
        "id": "d14ff235-9e0a-4496-9fd4-ae4cf39fa518",
        "merge_behavior": "AWAIT_ANY"
      },
      "ports": [
        {
          "id": "66943bf3-3c32-42da-9d4f-faab541f4285",
          "name": "default",
          "type": "DEFAULT"
        }
      ],
      "outputs": [
        {
          "id": "af7d71b0-227c-4957-8234-d1dc76e62554",
          "name": "json",
          "type": "JSON",
          "value": null
        },
        {
          "id": "b283959e-b719-49d2-ab9a-15c804ab52e8",
          "name": "text",
          "type": "STRING",
          "value": null
        },
        {
          "id": "73c02172-2bd1-482d-b7fe-acc67135f7d0",
          "name": "results",
          "type": "ARRAY",
          "value": null
        }
      ],
      "attributes": [
        {
          "id": "e2455e77-82ad-460f-8735-10d427d4d448",
          "name": "functions",
          "value": {
            "type": "CONSTANT_VALUE",
            "value": {
              "type": "JSON",
              "value": null
            }
          }
        },
        {
          "id": "bd29a2cd-4965-4741-a3c2-9d0c753efdd9",
          "name": "parameters",
          "value": {
            "type": "CONSTANT_VALUE",
            "value": {
              "type": "JSON",
              "value": {
                "stop": [],
                "temperature": 0.0,
                "max_tokens": 4096.0,
                "top_p": 1.0,
                "top_k": 0.0,
                "frequency_penalty": 0.0,
                "presence_penalty": 0.0,
                "logit_bias": null,
                "custom_parameters": null
              }
            }
          }
        },
        {
          "id": "76f813d6-0025-4733-9d03-848c49c93d66",
          "name": "ml_model",
          "value": {
            "type": "CONSTANT_VALUE",
            "value": {
              "type": "JSON",
              "value": null
            }
          }
        },
        {
          "id": "1216ae32-e051-4c48-bd7d-69f2a4527f12",
          "name": "blocks",
          "value": {
            "type": "CONSTANT_VALUE",
            "value": {
              "type": "JSON",
              "value": null
            }
          }
        },
        {
          "id": "b66dc0b6-9e4d-4bbb-9b3c-b85e14071de0",
          "name": "prompt_inputs",
          "value": {
            "type": "CONSTANT_VALUE",
            "value": {
              "type": "JSON",
              "value": null
            }
          }
        }
      ]
    },
    {
      "id": "9d62e15c-a640-4a65-b52c-ce0cbaa23a71",
      "display_data": {
        "position": {
          "x": 0.0,
          "y": 0.0
        },
        "comment": {
          "value": "\n    Used to execute a Subworkflow defined inline.\n\n    subworkflow: Type[\"BaseWorkflow[InputsType, InnerStateType]\"] - The Subworkflow to execute\n    subworkflow_inputs: ClassVar[EntityInputsInterface] = {}\n    ",
          "expanded": true
        }
      },
      "base": {
        "name": "BaseNode",
        "module": [
          "vellum",
          "workflows",
          "nodes",
          "bases",
          "base"
        ]
      },
      "definition": {
        "name": "InlineSubworkflowNode",
        "module": [
          "vellum",
          "workflows",
          "nodes",
          "core",
          "inline_subworkflow_node",
          "node"
        ]
      },
      "trigger": {
        "id": "d7c92c2f-d761-43e7-a7e6-34fd74b3b8b3",
        "merge_behavior": "AWAIT_ATTRIBUTES"
      },
      "ports": [
        {
          "id": "bb1e4a4f-60e7-4519-b127-80183008a3f7",
          "name": "default",
          "type": "DEFAULT"
        }
      ]
    },
    {
      "id": "2dded52f-a449-48fd-b58f-f59801c24bae",
      "display_data": {
        "position": {
          "x": 0.0,
          "y": 0.0
        },
        "comment": {
          "value": "\n    Used to execute a Metric Definition and surface a float output representing the score.\n\n    metric_definition: Union[UUID, str] - Either the Metric Definition's UUID or its name.\n    metric_inputs: EntityInputsInterface - The inputs for the Metric\n    release_tag: str - The release tag to use for the Metric\n    request_options: Optional[RequestOptions] - The request options to use for the Metric\n    ",
          "expanded": true
        }
      },
      "base": {
        "name": "BaseNode",
        "module": [
          "vellum",
          "workflows",
          "nodes",
          "bases",
          "base"
        ]
      },
      "definition": {
        "name": "GuardrailNode",
        "module": [
          "vellum",
          "workflows",
          "nodes",
          "displayable",
          "guardrail_node",
          "node"
        ]
      },
      "trigger": {
        "id": "1560db25-a416-4ce6-b175-d7bdfbdb27d8",
        "merge_behavior": "AWAIT_ANY"
      },
      "ports": [
        {
          "id": "94bc1403-af9f-4539-8208-1bbafbf09564",
          "name": "default",
          "type": "DEFAULT"
        }
      ]
    },
    {
      "id": "527a10bc-30b2-4e36-91d6-91c8e865bac8",
      "display_data": {
        "position": {
          "x": 0.0,
          "y": 0.0
        },
        "comment": {
          "value": "\n    Used to map over a list of items and execute a Subworkflow on each iteration.\n\n    items: List[MapNodeItemType] - The items to map over\n    max_concurrency: Optional[int] = None - The maximum number of concurrent subworkflow executions\n    subworkflow: Type[\"BaseWorkflow\"] - The Subworkflow to execute\n    ",
          "expanded": true
        }
      },
      "base": {
        "name": "BaseAdornmentNode",
        "module": [
          "vellum",
          "workflows",
          "nodes",
          "bases",
          "base_adornment_node"
        ]
      },
      "definition": {
        "name": "MapNode",
        "module": [
          "vellum",
          "workflows",
          "nodes",
          "core",
          "map_node",
          "node"
        ]
      },
      "trigger": {
        "id": "3a702aac-7b68-47d3-92e1-264883e9532c",
        "merge_behavior": "AWAIT_ATTRIBUTES"
      },
      "ports": [
        {
          "id": "0ae85239-a159-48af-b39c-2484eac901df",
          "name": "default",
          "type": "DEFAULT"
        }
      ]
    },
    {
      "id": "7426f273-a43d-4448-a2d2-76d0ee0d069c",
      "display_data": {
        "position": {
          "x": 0.0,
          "y": 0.0
        },
        "comment": {
          "value": "\n    Used to merge the control flow of multiple nodes into a single node. This node exists to be backwards compatible\n    with Vellum's Merge Node, and for most cases, you should extend from `BaseNode.Trigger` directly.\n    ",
          "expanded": true
        }
      },
      "base": {
        "name": "BaseNode",
        "module": [
          "vellum",
          "workflows",
          "nodes",
          "bases",
          "base"
        ]
      },
      "definition": {
        "name": "MergeNode",
        "module": [
          "vellum",
          "workflows",
          "nodes",
          "displayable",
          "merge_node",
          "node"
        ]
      },
      "trigger": {
        "id": "3a91ba25-0dd0-4bc8-9f6d-c54ea4dccf64",
        "merge_behavior": "AWAIT_ANY"
      },
      "ports": [
        {
          "id": "50515fe3-4be8-43b9-8fc5-d52c1250115e",
          "name": "default",
          "type": "DEFAULT"
        }
      ]
    },
    {
      "id": "16b8d82d-458d-48d9-b57e-a447b19f311a",
      "display_data": {
        "position": {
          "x": 0.0,
          "y": 0.0
        },
        "comment": {
          "value": "\n    A no-op Node purely used to display a note in the Vellum UI.\n    ",
          "expanded": true
        }
      },
      "base": {
        "name": "BaseNode",
        "module": [
          "vellum",
          "workflows",
          "nodes",
          "bases",
          "base"
        ]
      },
      "definition": {
        "name": "NoteNode",
        "module": [
          "vellum",
          "workflows",
          "nodes",
          "displayable",
          "note_node",
          "node"
        ]
      },
      "trigger": {
        "id": "2b6907b0-1adc-41e7-9d5b-3c6ccd9b973a",
        "merge_behavior": "AWAIT_ANY"
      },
      "ports": [
        {
          "id": "22dac74c-7ad6-4a6f-97ae-0034124721ce",
          "name": "default",
          "type": "DEFAULT"
        }
      ]
    },
    {
      "id": "035842e0-34ed-43af-97de-a706e40912ae",
      "label": "Tool Calling Node",
      "display_data": {
        "position": {
          "x": 0.0,
          "y": 0.0
        },
        "comment": {
          "value": "\n    A Node that dynamically invokes the provided functions to the underlying Prompt\n\n    Attributes:\n        ml_model: str - The model to use for tool calling (e.g., \"gpt-4o-mini\")\n        blocks: List[PromptBlock] - The prompt blocks to use (same format as InlinePromptNode)\n        functions: List[Tool] - The functions that can be called\n        prompt_inputs: Optional[EntityInputsInterface] - Mapping of input variable names to values\n        parameters: PromptParameters - The parameters for the Prompt\n        max_prompt_iterations: Optional[int] - Maximum number of prompt iterations before stopping\n    ",
          "expanded": true
        }
      },
      "base": {
        "name": "BaseNode",
        "module": [
          "vellum",
          "workflows",
          "nodes",
          "bases",
          "base"
        ]
      },
      "definition": {
        "name": "ToolCallingNode",
        "module": [
          "vellum",
          "workflows",
          "nodes",
          "displayable",
          "tool_calling_node",
          "node"
        ]
      },
      "trigger": {
        "id": "f9b4a4ce-68ae-45f4-9e29-38b588abdf97",
        "merge_behavior": "AWAIT_ATTRIBUTES"
      },
      "ports": [
        {
          "id": "72157fce-fc16-44d8-a00d-506738a20730",
          "name": "default",
          "type": "DEFAULT"
        }
      ],
      "attributes": [
        {
          "id": "df3761db-067a-4fe9-9fc3-ba270786fcf6",
          "name": "ml_model",
          "value": {
            "type": "CONSTANT_VALUE",
            "value": {
              "type": "STRING",
              "value": "gpt-4o-mini"
            }
          }
        },
        {
          "id": "66133945-f7fd-43bb-8b46-0761e2b58241",
          "name": "blocks",
          "value": {
            "type": "CONSTANT_VALUE",
            "value": {
              "type": "JSON",
              "value": []
            }
          }
        },
        {
          "id": "0079b429-3b1c-4f7c-9ccf-185ace4dcbb2",
          "name": "functions",
          "value": {
            "type": "CONSTANT_VALUE",
            "value": {
              "type": "JSON",
              "value": []
            }
          }
        },
        {
          "id": "ebda56e6-2ace-472c-a106-36cb69264e96",
          "name": "prompt_inputs",
          "value": {
            "type": "CONSTANT_VALUE",
            "value": {
              "type": "JSON",
              "value": null
            }
          }
        },
        {
          "id": "2534a586-5b37-41f3-a9a4-8162b8538df4",
          "name": "parameters",
          "value": {
            "type": "CONSTANT_VALUE",
            "value": {
              "type": "JSON",
              "value": {
                "stop": [],
                "temperature": 0.0,
                "max_tokens": 4096.0,
                "top_p": 1.0,
                "top_k": 0.0,
                "frequency_penalty": 0.0,
                "presence_penalty": 0.0,
                "logit_bias": null,
                "custom_parameters": null
              }
            }
          }
        },
        {
          "id": "118ef72a-0767-4659-8ddf-58a071f95988",
          "name": "max_prompt_iterations",
          "value": {
            "type": "CONSTANT_VALUE",
            "value": {
              "type": "NUMBER",
              "value": 5.0
            }
          }
        },
        {
          "id": "d7ef5296-1e48-4d05-b97a-77f16d46fd50",
          "name": "settings",
          "value": {
            "type": "CONSTANT_VALUE",
            "value": {
              "type": "JSON",
              "value": null
            }
          }
        }
      ],
      "outputs": [
        {
          "id": "c18a8725-21e1-4736-a77c-76d0fc035176",
          "name": "text",
          "type": "STRING",
          "value": null
        },
        {
          "id": "5a9ad073-c670-43d2-9198-a08e9fdda7ad",
          "name": "chat_history",
          "type": "CHAT_HISTORY",
          "value": null
        }
      ]
    },
    {
      "id": "187ed9ed-ca2b-49e4-943d-ee8da5fad973",
      "label": "Web Search Node",
      "display_data": {
        "position": {
          "x": 0.0,
          "y": 0.0
        },
        "comment": {
          "value": "\n    Used to perform web search using SerpAPI.\n\n    query: str - The search query to execute\n    api_key: str - SerpAPI authentication key\n    num_results: int - Number of search results to return (default: 10)\n    location: Optional[str] - Geographic location filter for search\n    ",
          "expanded": true
        }
      },
      "base": {
        "name": "BaseNode",
        "module": [
          "vellum",
          "workflows",
          "nodes",
          "bases",
          "base"
        ]
      },
      "definition": {
        "name": "WebSearchNode",
        "module": [
          "vellum",
          "workflows",
          "nodes",
          "displayable",
          "web_search_node",
          "node"
        ]
      },
      "trigger": {
        "id": "036c7a0c-fff3-44f7-b49b-429d8f44f212",
        "merge_behavior": "AWAIT_ATTRIBUTES"
      },
      "ports": [
        {
          "id": "ef824748-d00d-41e7-b7b4-d0edc536c3af",
          "name": "default",
          "type": "DEFAULT"
        }
      ],
      "attributes": [
        {
          "id": "b5ba3c60-e02c-46c8-b470-d86c4f8f42af",
          "name": "query",
          "value": {
            "type": "CONSTANT_VALUE",
            "value": {
              "type": "STRING",
              "value": ""
            }
          }
        },
        {
          "id": "222408bc-7dae-4bb8-9aba-a1ac36bdc759",
          "name": "api_key",
          "value": {
            "type": "CONSTANT_VALUE",
            "value": {
              "type": "JSON",
              "value": null
            }
          }
        },
        {
          "id": "795a0bbc-bb98-4bc8-a9d9-88b0cb796d23",
          "name": "num_results",
          "value": {
            "type": "CONSTANT_VALUE",
            "value": {
              "type": "NUMBER",
              "value": 10.0
            }
          }
        },
        {
          "id": "e1648557-ca03-4a81-ab5b-86495284b325",
          "name": "location",
          "value": {
            "type": "CONSTANT_VALUE",
            "value": {
              "type": "JSON",
              "value": null
            }
          }
        }
      ],
      "outputs": [
        {
          "id": "704a4ba3-1afe-482d-876a-91dcdbe90fb7",
          "name": "text",
          "type": "STRING",
          "value": null
        },
        {
          "id": "574b2ebe-f250-4024-b517-3cd47704c70e",
          "name": "urls",
          "type": "JSON",
          "value": null
        },
        {
          "id": "9798a067-3589-4a2a-a811-6019873cbbfe",
          "name": "results",
          "type": "JSON",
          "value": null
        }
      ]
    },
    {
      "id": "bf31cc42-b5e4-4191-a453-7191743ac200",
      "display_data": {
        "position": {
          "x": 0.0,
          "y": 0.0
        },
        "comment": {
          "value": "\n    Used to directly reference the output of another node.\n    This provides backward compatibility with Vellum's Final Output Node.\n    ",
          "expanded": true
        }
      },
      "base": {
        "name": "BaseNode",
        "module": [
          "vellum",
          "workflows",
          "nodes",
          "bases",
          "base"
        ]
      },
      "definition": {
        "name": "FinalOutputNode",
        "module": [
          "vellum",
          "workflows",
          "nodes",
          "displayable",
          "final_output_node",
          "node"
        ]
      },
      "trigger": {
        "id": "0b2da045-2a4c-4939-8b5c-661652c759d4",
        "merge_behavior": "AWAIT_ANY"
      },
      "ports": [],
      "outputs": [
        {
          "id": "7f41909e-9ce1-4fde-ba77-a13dda301ece",
          "name": "value",
          "type": "STRING",
          "value": {
            "__undefined__": true
          }
        }
      ]
    }
  ],
  "errors": [
    {
      "node": "SubworkflowDeploymentNode",
      "error": "ApiError: headers: {'server': 'gunicorn', 'date': 'Wed, 24 Sep 2025 04:58:53 GMT', 'content-type': 'application/json', 'allow': 'GET, PUT, PATCH, DELETE, HEAD, OPTIONS', 'x-frame-options': 'DENY', 'content-length': '58', 'vary': 'Accept-Language, Origin', 'content-language': 'en', 'strict-transport-security': 'max-age=60; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'referrer-policy': 'same-origin', 'cross-origin-opener-policy': 'same-origin', 'via': '1.1 google', 'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000'}, status_code: 403, body: {'detail': 'Authentication credentials were not provided.'}"
    },
    {
      "node": "PromptDeploymentNode",
      "error": "ApiError: headers: {'server': 'gunicorn', 'date': 'Wed, 24 Sep 2025 04:58:53 GMT', 'content-type': 'application/json', 'allow': 'GET, PUT, PATCH, DELETE, HEAD, OPTIONS', 'x-frame-options': 'DENY', 'content-length': '58', 'vary': 'Accept-Language, Origin', 'content-language': 'en', 'strict-transport-security': 'max-age=60; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'referrer-policy': 'same-origin', 'cross-origin-opener-policy': 'same-origin', 'via': '1.1 google', 'alt-svc': 'h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000'}, status_code: 403, body: {'detail': 'Authentication credentials were not provided.'}"
    },
    {
      "node": "SearchNode",
      "error": "ValueError: Expected NodeReference query to have an instance"
    },
    {
      "node": "TemplatingNode",
      "error": "KeyError: TemplatingNode.Outputs.result"
    }
  ]
}
