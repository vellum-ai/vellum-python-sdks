[project]
name = "vellum-ai"

[tool.poetry]
name = "vellum-ai"
version = "0.14.70"
description = ""
readme = "README.md"
authors = []
keywords = []
license = "MIT"
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Operating System :: POSIX",
    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
    "License :: OSI Approved :: MIT License"
]
urls = { Repository = "https://github.com/vellum-ai/vellum-python-sdks" }
packages = [
    { include = "vellum", from = "src" },
    { include = "vellum_cli", from = "ee" },
    { include = "vellum_ee", from = "ee" },
]

[tool.poetry.dependencies]
python = "^3.9"
Jinja2 = ">=3.1.0,<4.0.0"
click = ">=8.1.7,<9.0.0"
docker = ">=7.1.0,<8.0.0"
httpx = ">=0.21.2"
openai = ">=1.0.0,<2.0.0"
orderly-set = "^5.2.2"
publication = "0.0.3"
pydantic = ">= 1.9.2"
pydantic-core = "^2.18.2"
pydash = ">=7.0.0,<8.0.0"
python-dateutil = ">=2.8.0,<3.0.0"
python-dotenv = ">=1.0.0,<2.0.0"
pytz = ">=2022.0,<2026.0"
pyyaml = ">=6.0.0,<7.0.0"
requests = ">=2.31.0,<3.0.0"
tomli = ">=2.0.0,<3.0.0"
typing_extensions = ">= 4.0.0"

[tool.poetry.dev-dependencies]
mypy = "1.11.1"
pytest = "^7.4.0"
pytest-asyncio = "^0.23.5"
python-dateutil = "^2.9.0"
types-python-dateutil = "^2.9.0.20240316"
black = "24.8.0"
deepdiff = "8.0.1"
flake8 = "7.1.1"
flake8-breakpoint = "1.1.0"
flake8-isort = "6.1.1"
flake8-print = "5.0.0"
flake8-pyproject = "1.2.3"
flake8-unused-arguments = "^0.0.13"
ipdb = "0.13.13"
ipython = "8.12.3"
isort = "5.13.2"
pre-commit = "3.5.0"
pytest-mock = "3.10.0"
pytest-timeout = "2.3.1"
requests-mock = "1.11.0"
ruff = "^0.5.6"
tomli_w = "1.1.0"
types-PyYAML = "6.0.12.20240808"
types-pytz = "2024.1.0.20240417"
types-requests = "2.32.0.20240712"

[tool.pytest.ini_options]
testpaths = [ "tests" ]
asyncio_mode = "auto"
filterwarnings = [
    "ignore::pytest.PytestCollectionWarning"
]

[tool.mypy]
plugins = [
    "pydantic.mypy",
    "vellum.plugins.vellum_mypy",
]
check_untyped_defs = true
exclude = ["venv", "examples/workflows"]
overrides = [
    { module = "deepdiff.*", ignore_missing_imports = true },
    { module = "docker.*", ignore_missing_imports = true },
    { module = "setuptools.*", ignore_missing_imports = true },
    { module = "vellum_ee.workflows.display.nodes.utils", ignore_errors = true },
]
[tool.ruff]
line-length = 120


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
vellum = "vellum_cli:main"

[tool.isort]
skip = ["src/vellum/client", "tests/client", ".venv", "src/vellum/__init__.py", "examples/workflows"]
multi_line_output = 3
force_grid_wrap = 0
line_length = 120
combine_as_imports = true
force_sort_within_sections = true
include_trailing_comma = true
use_parentheses = true
known_testing = "pytest"
known_typing = ["typing", "typing_extensions"]
known_vellum = ["vellum", "vellum_cli", "vellum_ee"]
default_section = "THIRDPARTY"
sections = ["FUTURE", "TESTING", "STDLIB", "TYPING", "THIRDPARTY", "VELLUM", "FIRSTPARTY", "LOCALFOLDER"]
no_lines_before = ["STDLIB", "TYPING"]
sort_order = "native"

[tool.black]
line-length = 120
target-version = [
    "py38",
]
include = ".*\\.py$"
exclude = "(.git|venv|src/vellum/client|tests/client|scripts|examples/workflows)"

[tool.flake8]
max-line-length = 120
exclude = ".git,.venv,ee/codegen/node_modules,ee/codegen_integration/fixtures,scripts,src/vellum/__init__.py,src/vellum/client,src/vellum/core,src/vellum/environment.py,src/vellum/errors,src/vellum/resources,src/vellum/types,tests/client,examples/workflows"
ignore = "E203, W503, E704"
per-file-ignores = "ee/vellum_cli/tests/test_pull.py:U101, ee/vellum_ee/workflows/display/nodes/base_node_display.py:U101, ee/vellum_ee/workflows/display/nodes/utils.py:U101, ee/vellum_ee/workflows/display/nodes/vellum/api_node.py:U101, ee/vellum_ee/workflows/display/nodes/vellum/code_execution_node.py:U101, ee/vellum_ee/workflows/display/nodes/vellum/conditional_node.py:U101, ee/vellum_ee/workflows/display/nodes/vellum/error_node.py:U101, ee/vellum_ee/workflows/display/nodes/vellum/final_output_node.py:U101, ee/vellum_ee/workflows/display/nodes/vellum/guardrail_node.py:U101, ee/vellum_ee/workflows/display/nodes/vellum/inline_prompt_node.py:U101, ee/vellum_ee/workflows/display/nodes/vellum/inline_subworkflow_node.py:U101, ee/vellum_ee/workflows/display/nodes/vellum/map_node.py:U101, ee/vellum_ee/workflows/display/nodes/vellum/merge_node.py:U101, ee/vellum_ee/workflows/display/nodes/vellum/note_node.py:U101, ee/vellum_ee/workflows/display/nodes/vellum/prompt_deployment_node.py:U101, ee/vellum_ee/workflows/display/nodes/vellum/retry_node.py:U101, ee/vellum_ee/workflows/display/nodes/vellum/search_node.py:U101, ee/vellum_ee/workflows/display/nodes/vellum/subworkflow_deployment_node.py:U101, ee/vellum_ee/workflows/display/nodes/vellum/templating_node.py:U101, ee/vellum_ee/workflows/display/nodes/vellum/tests/test_code_execution_node.py:U100, ee/vellum_ee/workflows/display/nodes/vellum/tests/test_prompt_deployment_node.py:U100, ee/vellum_ee/workflows/display/nodes/vellum/tests/test_prompt_node.py:U100, ee/vellum_ee/workflows/display/nodes/vellum/tests/test_subworkflow_deployment_node.py:U100, ee/vellum_ee/workflows/display/nodes/vellum/tests/test_templating_node.py:U100, ee/vellum_ee/workflows/display/nodes/vellum/try_node.py:U100, ee/vellum_ee/workflows/display/workflows/base_workflow_display.py:U100, ee/vellum_ee/workflows/display/workflows/get_vellum_workflow_display_class.py:U100, ee/vellum_ee/workflows/server/virtual_file_loader.py:U100, src/vellum/plugins/pydantic.py:U100, src/vellum/plugins/vellum_mypy.py:U100, src/vellum/workflows/constants.py:U100, src/vellum/workflows/descriptors/base.py:U100, src/vellum/workflows/descriptors/utils.py:U100, src/vellum/workflows/emitters/base.py:U100, src/vellum/workflows/events/node.py:U101, src/vellum/workflows/events/types.py:U100, src/vellum/workflows/events/workflow.py:U101, src/vellum/workflows/expressions/accessor.py:U100, src/vellum/workflows/expressions/greater_than.py:U100, src/vellum/workflows/expressions/greater_than_or_equal_to.py:U100, src/vellum/workflows/expressions/less_than.py:U100, src/vellum/workflows/expressions/less_than_or_equal_to.py:U100, src/vellum/workflows/inputs/base.py:U100, src/vellum/workflows/nodes/bases/base.py:U100, src/vellum/workflows/nodes/bases/tests/test_base_node.py:U100, src/vellum/workflows/nodes/core/map_node/node.py:U100, src/vellum/workflows/nodes/displayable/bases/inline_prompt_node/tests/test_inline_prompt_node.py:U100, src/vellum/workflows/nodes/displayable/code_execution_node/utils.py:U100, src/vellum/workflows/nodes/displayable/inline_prompt_node/tests/test_node.py:U100, src/vellum/workflows/nodes/displayable/prompt_deployment_node/tests/test_node.py:U100, src/vellum/workflows/nodes/displayable/subworkflow_deployment_node/tests/test_node.py:U100, src/vellum/workflows/nodes/displayable/tests/test_inline_text_prompt_node.py:U100, src/vellum/workflows/nodes/displayable/tests/test_text_prompt_deployment_node.py:U100, src/vellum/workflows/outputs/base.py:U100, src/vellum/workflows/ports/node_ports.py:U100, src/vellum/workflows/ports/port.py:U100, src/vellum/workflows/references/constant.py:U100, src/vellum/workflows/references/environment_variable.py:U100, src/vellum/workflows/references/external_input.py:U100, src/vellum/workflows/references/node.py:U100, src/vellum/workflows/references/output.py:U100, src/vellum/workflows/references/vellum_secret.py:U100, src/vellum/workflows/state/base.py:U100,U101, src/vellum/workflows/state/store.py:U100, src/vellum/workflows/state/tests/test_state.py:U100,U101, src/vellum/workflows/utils/tests/test_functions.py:U100, src/vellum/workflows/workflows/base.py:U100, src/vellum/workflows/workflows/event_filters.py:U100, tests/workflows/background_emitter/workflow.py:U100, tests/workflows/basic_inline_prompt_node/tests/test_workflow.py:U100, tests/workflows/basic_inline_prompt_node_with_functions/tests/test_workflow.py:U100, tests/workflows/basic_inline_prompt_node_with_functions_and_dependencies/tests/test_workflow.py:U100, tests/workflows/basic_node_mocking/tests/test_workflow.py:U100, tests/workflows/basic_prompt_deployment/tests/test_workflow.py:U100, tests/workflows/basic_retry_node_annotation/tests/test_workflow_with_guardrail_and_retry_nodes.py:U100, tests/workflows/basic_subworkflow_deployment/tests/test_workflow.py:U100, tests/workflows/basic_text_prompt_deployment/tests/test_workflow.py:U100, tests/workflows/basic_tool_calling_node/tests/test_workflow.py:U100, tests/workflows/basic_tool_calling_node_inline_workflow/tests/test_workflow.py:U100, tests/workflows/basic_tool_calling_node_multi_tool/tests/test_workflow.py:U100, tests/workflows/basic_tool_calling_node_multi_tool/workflow.py:U100, tests/workflows/basic_tool_calling_node_no_tool/tests/test_workflow.py:U100, tests/workflows/stream_custom_ports_node/tests/test_workflow.py:U100, tests/workflows/stream_final_output_node/tests/test_workflow.py:U100, tests/workflows/streaming_node_pipeline/workflow.py:U100"
