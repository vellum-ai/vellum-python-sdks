name: ci

on:
  push:
    branches:
      - main
    tags:
      - '*'

  pull_request:
    types:
      - opened
      - reopened
      - synchronize

jobs:
  compile:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Bootstrap poetry
        run: make setup-poetry
      - name: Install dependencies
        run: poetry install
      - name: Format
        run: poetry run black --check .
      - name: Order Imports
        run: poetry run isort --check .
      - name: Lint
        run: poetry run flake8
      - name: Compile
        run: poetry run mypy .
  test:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Bootstrap poetry
        run: make setup-poetry
      - name: Install dependencies
        run: poetry install

      - name: Install Fern
        run: npm install -g fern-api
      - name: Test
        run: fern test --command "poetry run pytest -rP ."

  publish:
    needs: [compile, test]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Bootstrap poetry
        run: make setup-poetry
      - name: Install dependencies
        run: poetry install
      - name: Publish to pypi
        run: |
          poetry config repositories.remote https://upload.pypi.org/legacy/
          poetry --no-interaction -v publish --build --repository remote --username "$PYPI_USERNAME" --password "$PYPI_PASSWORD"
        env:
          PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
