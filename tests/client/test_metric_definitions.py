# This file was auto-generated by Fern from our API Definition.

from vellum import Vellum
from vellum import AsyncVellum
import typing
from vellum import StringInput
from .utilities import validate_response


async def test_execute_metric_definition(client: Vellum, async_client: AsyncVellum) -> None:
    expected_response: typing.Any = {"outputs": [{"value": "value", "type": "STRING", "name": "name"}]}
    expected_types: typing.Any = {"outputs": ("list", {0: {"value": None, "type": None, "name": None}})}
    response = client.metric_definitions.execute_metric_definition(
        id="id", inputs=[StringInput(name="name", value="value")]
    )
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.metric_definitions.execute_metric_definition(
        id="id", inputs=[StringInput(name="name", value="value")]
    )
    validate_response(async_response, expected_response, expected_types)


async def test_metric_definition_history_item_retrieve(client: Vellum, async_client: AsyncVellum) -> None:
    expected_response: typing.Any = {
        "id": "id",
        "label": "label",
        "name": "name",
        "description": "description",
        "input_variables": [
            {"id": "id", "key": "key", "type": "STRING", "required": True, "default": {"type": "STRING"}}
        ],
        "output_variables": [
            {"id": "id", "key": "key", "type": "STRING", "required": True, "default": {"type": "STRING"}}
        ],
    }
    expected_types: typing.Any = {
        "id": None,
        "label": None,
        "name": None,
        "description": None,
        "input_variables": (
            "list",
            {0: {"id": None, "key": None, "type": None, "required": None, "default": {"type": None}}},
        ),
        "output_variables": (
            "list",
            {0: {"id": None, "key": None, "type": None, "required": None, "default": {"type": None}}},
        ),
    }
    response = client.metric_definitions.metric_definition_history_item_retrieve(
        history_id_or_release_tag="history_id_or_release_tag", id="id"
    )
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.metric_definitions.metric_definition_history_item_retrieve(
        history_id_or_release_tag="history_id_or_release_tag", id="id"
    )
    validate_response(async_response, expected_response, expected_types)
